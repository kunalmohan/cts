{"version":3,"sources":["../../../src/framework/params/combine.ts"],"names":["assert","pcombine","params","PCombine","merge","a","b","key","Object","keys","hasOwnProperty","cartesian","iters","length","as","rest","Symbol","iterator","constructor"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AAIA,OAAO,SAASC,QAAT,CAAkB,GAAGC,MAArB,EAAqE;AAC1E,SAAO,IAAIC,QAAJ,CAAaD,MAAb,CAAP;AACD;;AAED,SAASE,KAAT,CAAeC,CAAf,EAA6BC,CAA7B,EAAsD;AACpD,OAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAlB,EAAkC;AAChCL,IAAAA,MAAM,CAAC,CAACM,CAAC,CAACI,cAAF,CAAiBH,GAAjB,CAAF,EAAyB,oBAAoBA,GAA7C,CAAN;AACD;;AACD,SAAO,EAAE,GAAGF,CAAL;AAAQ,OAAGC;AAAX,GAAP;AACD;;AAED,UAAUK,SAAV,CAAoBC,KAApB,EAAmE;AACjE,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AACD,MAAID,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOD,KAAK,CAAC,CAAD,CAAZ;AACA;AACD;;AACD,QAAM,CAACE,EAAD,EAAK,GAAGC,IAAR,IAAgBH,KAAtB;;AACA,OAAK,MAAMP,CAAX,IAAgBS,EAAhB,EAAoB;AAClB,SAAK,MAAMR,CAAX,IAAgBK,SAAS,CAACI,IAAD,CAAzB,EAAiC;AAC/B,YAAMX,KAAK,CAACC,CAAD,EAAIC,CAAJ,CAAX;AACD;AACF;AACF;;mBASEU,MAAM,CAACC,Q;;AAPV,MAAMd,QAAN,CAA4C;AAG1Ce,EAAAA,WAAW,CAAChB,MAAD,EAA8B;AAAA;;AACvC,SAAKA,MAAL,GAAcA,MAAd;AACD;;AAED,uBAAuC;AACrC,WAAOS,SAAS,CAAC,KAAKT,MAAN,CAAhB;AACD;;AATyC","sourcesContent":["import { assert } from '../util/index.js';\n\nimport { ParamSpec, ParamSpecIterable, ParamSpecIterator } from './index.js';\n\nexport function pcombine(...params: ParamSpecIterable[]): ParamSpecIterable {\n  return new PCombine(params);\n}\n\nfunction merge(a: ParamSpec, b: ParamSpec): ParamSpec {\n  for (const key of Object.keys(a)) {\n    assert(!b.hasOwnProperty(key), 'Duplicate key: ' + key);\n  }\n  return { ...a, ...b };\n}\n\nfunction* cartesian(iters: ParamSpecIterable[]): ParamSpecIterator {\n  if (iters.length === 0) {\n    return;\n  }\n  if (iters.length === 1) {\n    yield* iters[0];\n    return;\n  }\n  const [as, ...rest] = iters;\n  for (const a of as) {\n    for (const b of cartesian(rest)) {\n      yield merge(a, b);\n    }\n  }\n}\n\nclass PCombine implements ParamSpecIterable {\n  private params: ParamSpecIterable[];\n\n  constructor(params: ParamSpecIterable[]) {\n    this.params = params;\n  }\n\n  [Symbol.iterator](): ParamSpecIterator {\n    return cartesian(this.params);\n  }\n}\n"],"file":"combine.js"}
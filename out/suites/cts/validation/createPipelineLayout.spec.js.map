{"version":3,"sources":["../../../../src/suites/cts/validation/createPipelineLayout.spec.ts"],"names":["description","TestGroup","pbool","pcombine","poptions","kBindingTypeInfo","kBindingTypes","kShaderStageCombinations","ValidationTest","clone","descriptor","JSON","parse","stringify","g","test","t","type","visibility","params","maxDynamicCount","maxDynamicBufferBindings","binding","push","hasDynamicOffset","maxDynamicBufferBindGroupLayout","device","createBindGroupLayout","bindings","goodDescriptor","goodPipelineLayoutDescriptor","bindGroupLayouts","createPipelineLayout","badDescriptor","badPipelineLayoutDescriptor","expectValidationError","info","success","validStages","bindGroupLayoutDescriptor","maxBindGroupLayouts","map"],"mappings":"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","sourcesContent":["export const description = `\ncreatePipelineLayout validation tests.\n`;\n\nimport { TestGroup, pbool, pcombine, poptions } from '../../../framework/index.js';\nimport { kBindingTypeInfo, kBindingTypes, kShaderStageCombinations } from '../capability_info.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nfunction clone<T extends GPUBindGroupLayoutDescriptor>(descriptor: T): T {\n  return JSON.parse(JSON.stringify(descriptor));\n}\n\nexport const g = new TestGroup(ValidationTest);\n\ng.test('number of dynamic buffers exceeds the maximum value', async t => {\n  const { type, visibility } = t.params;\n  const maxDynamicCount = kBindingTypeInfo[type as GPUBindingType].maxDynamicCount;\n\n  const maxDynamicBufferBindings: GPUBindGroupLayoutBinding[] = [];\n  for (let binding = 0; binding < maxDynamicCount; binding++) {\n    maxDynamicBufferBindings.push({ binding, visibility, type, hasDynamicOffset: true });\n  }\n\n  const maxDynamicBufferBindGroupLayout = t.device.createBindGroupLayout({\n    bindings: maxDynamicBufferBindings,\n  });\n\n  const goodDescriptor = {\n    bindings: [{ binding: 0, visibility, type, hasDynamicOffset: false }],\n  };\n\n  const goodPipelineLayoutDescriptor = {\n    bindGroupLayouts: [\n      maxDynamicBufferBindGroupLayout,\n      t.device.createBindGroupLayout(goodDescriptor),\n    ],\n  };\n\n  // Control case\n  t.device.createPipelineLayout(goodPipelineLayoutDescriptor);\n\n  // Check dynamic buffers exceed maximum in pipeline layout.\n  const badDescriptor = clone(goodDescriptor);\n  badDescriptor.bindings[0].hasDynamicOffset = true;\n\n  const badPipelineLayoutDescriptor = {\n    bindGroupLayouts: [\n      maxDynamicBufferBindGroupLayout,\n      t.device.createBindGroupLayout(badDescriptor),\n    ],\n  };\n\n  t.expectValidationError(() => {\n    t.device.createPipelineLayout(badPipelineLayoutDescriptor);\n  });\n}).params(\n  pcombine(\n    poptions('visibility', [0, 2, 4, 6]), //\n    poptions('type', ['uniform-buffer', 'storage-buffer', 'readonly-storage-buffer'])\n  )\n);\n\ng.test('visibility and dynamic offsets', t => {\n  const hasDynamicOffset: boolean = t.params.hasDynamicOffset;\n  const type: GPUBindingType = t.params.type;\n  const visibility: GPUShaderStageFlags = t.params.visibility;\n  const info = kBindingTypeInfo[type as GPUBindingType];\n\n  const descriptor = {\n    bindings: [{ binding: 0, visibility, type, hasDynamicOffset }],\n  };\n\n  let success = true;\n  if (info.type !== 'buffer' && hasDynamicOffset) success = false;\n  if ((visibility & ~info.validStages) !== 0) success = false;\n\n  t.expectValidationError(() => {\n    t.device.createPipelineLayout({\n      bindGroupLayouts: [t.device.createBindGroupLayout(descriptor)],\n    });\n  }, !success);\n}).params(\n  pcombine(\n    poptions('type', kBindingTypes), //\n    pbool('hasDynamicOffset'),\n    poptions('visibility', kShaderStageCombinations)\n  )\n);\n\ng.test('number of bind group layouts exceeds the maximum value', async t => {\n  const bindGroupLayoutDescriptor: GPUBindGroupLayoutDescriptor = {\n    bindings: [],\n  };\n\n  // 4 is the maximum number of bind group layouts.\n  const maxBindGroupLayouts = [1, 2, 3, 4].map(() =>\n    t.device.createBindGroupLayout(bindGroupLayoutDescriptor)\n  );\n\n  const goodPipelineLayoutDescriptor = {\n    bindGroupLayouts: maxBindGroupLayouts,\n  };\n\n  // Control case\n  t.device.createPipelineLayout(goodPipelineLayoutDescriptor);\n\n  // Check bind group layouts exceed maximum in pipeline layout.\n  const badPipelineLayoutDescriptor = {\n    bindGroupLayouts: [\n      ...maxBindGroupLayouts,\n      t.device.createBindGroupLayout(bindGroupLayoutDescriptor),\n    ],\n  };\n\n  t.expectValidationError(() => {\n    t.device.createPipelineLayout(badPipelineLayoutDescriptor);\n  });\n});\n"],"file":"createPipelineLayout.spec.js"}
{"version":3,"sources":["../../../../src/suites/cts/validation/error_scope.spec.ts"],"names":["description","getGPU","Fixture","TestGroup","raceWithRejectOnTimeout","F","undefined","init","gpu","adapter","requestAdapter","device","requestDevice","createErrorBuffer","createBuffer","size","usage","defaultQueue","submit","expectUncapturedError","fn","immediateAsyncExpectation","TIMEOUT_IN_MS","promise","Promise","resolve","eventListener","event","debug","error","addEventListener","once","g","test","t","pushErrorScope","popErrorScope","expect","GPUValidationError","uncapturedErrorEvent","shouldReject","promises","i","push","errors","all","every","e"],"mappings":"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","sourcesContent":["export const description = `\nerror scope validation tests.\n`;\n\nimport { getGPU } from '../../../framework/gpu/implementation.js';\nimport { Fixture, TestGroup, raceWithRejectOnTimeout } from '../../../framework/index.js';\n\nclass F extends Fixture {\n  device: GPUDevice = undefined!;\n\n  async init(): Promise<void> {\n    super.init();\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    this.device = await adapter.requestDevice();\n  }\n\n  createErrorBuffer(): void {\n    this.device.createBuffer({\n      size: 1024,\n      usage: 0xffff, // Invalid GPUBufferUsage\n    });\n    // TODO: Remove when chrome does it automatically.\n    this.device.defaultQueue.submit([]);\n  }\n\n  // Expect an uncapturederror event to occur. Note: this MUST be awaited, because\n  // otherwise it could erroneously pass by capturing an error from later in the test.\n  async expectUncapturedError(fn: Function): Promise<GPUUncapturedErrorEvent> {\n    return this.immediateAsyncExpectation(() => {\n      // TODO: Make arbitrary timeout value a test runner variable\n      const TIMEOUT_IN_MS = 1000;\n\n      const promise: Promise<GPUUncapturedErrorEvent> = new Promise(resolve => {\n        const eventListener = ((event: GPUUncapturedErrorEvent) => {\n          this.debug(`Got uncaptured error event with ${event.error}`);\n          resolve(event);\n        }) as EventListener;\n\n        this.device.addEventListener('uncapturederror', eventListener, { once: true });\n      });\n\n      fn();\n\n      return raceWithRejectOnTimeout(\n        promise,\n        TIMEOUT_IN_MS,\n        'Timeout occurred waiting for uncaptured error'\n      );\n    });\n  }\n}\n\nexport const g = new TestGroup(F);\n\ng.test('simple case where the error scope catches an error', async t => {\n  t.device.pushErrorScope('validation');\n\n  t.createErrorBuffer();\n\n  const error = await t.device.popErrorScope();\n  t.expect(error instanceof GPUValidationError);\n});\n\ng.test('errors bubble to the parent scope if not handled by the current scope', async t => {\n  t.device.pushErrorScope('validation');\n  t.device.pushErrorScope('out-of-memory');\n\n  t.createErrorBuffer();\n\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error === null);\n  }\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error instanceof GPUValidationError);\n  }\n});\n\ng.test('if an error scope matches an error it does not bubble to the parent scope', async t => {\n  t.device.pushErrorScope('validation');\n  t.device.pushErrorScope('validation');\n\n  t.createErrorBuffer();\n\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error instanceof GPUValidationError);\n  }\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error === null);\n  }\n});\n\ng.test('if no error scope handles an error it fires an uncapturederror event', async t => {\n  t.device.pushErrorScope('out-of-memory');\n\n  const uncapturedErrorEvent = await t.expectUncapturedError(() => {\n    t.createErrorBuffer();\n  });\n  t.expect(uncapturedErrorEvent.error instanceof GPUValidationError);\n\n  const error = await t.device.popErrorScope();\n  t.expect(error === null);\n});\n\ng.test('push/popping sibling error scopes must be balanced', async t => {\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n\n  const promises = [];\n  for (let i = 0; i < 1000; i++) {\n    t.device.pushErrorScope('validation');\n    promises.push(t.device.popErrorScope());\n  }\n  const errors = await Promise.all(promises);\n  t.expect(errors.every(e => e === null));\n\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n});\n\ng.test('push/popping nested error scopes must be balanced', async t => {\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n\n  const promises = [];\n  for (let i = 0; i < 1000; i++) {\n    t.device.pushErrorScope('validation');\n  }\n  for (let i = 0; i < 1000; i++) {\n    promises.push(t.device.popErrorScope());\n  }\n  const errors = await Promise.all(promises);\n  t.expect(errors.every(e => e === null));\n\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n});\n"],"file":"error_scope.spec.js"}